angular.module("bookTradingApp",["ngAnimate","app.routes","authService","mainCtrl","userCtrl","bookCtrl","userService","bookService"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]),angular.module("app.routes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,o){e.when("/",{templateUrl:"app/views/pages/home.html",controller:"mainController",controllerAs:"main"}).when("/signup",{templateUrl:"app/views/pages/signup.html",controller:"userCreateController",controllerAs:"user"}).when("/login",{templateUrl:"app/views/pages/login.html",controller:"mainController",controllerAs:"login"}).when("/mybooks",{templateUrl:"app/views/pages/books/mybooks.html",controller:"bookController",controllerAs:"book"}).when("/allbooks",{templateUrl:"app/views/pages/books/allbooks.html",controller:"allBookController",controllerAs:"book"}).when("/settings",{templateUrl:"app/views/pages/settings.html",controller:"userEditController",controllerAs:"user"}).when("/users",{templateUrl:"app/views/pages/users/all.html",controller:"userController",controllerAs:"user"}).when("/users/create",{templateUrl:"app/views/pages/users/single.html",controller:"userCreateController",controllerAs:"user"}).when("/users/:user_id",{templateUrl:"app/views/pages/users/single.html",controller:"userEditController",controllerAs:"user"}).otherwise({redirectTo:"/"}),o.html5Mode(!0)}]),angular.module("bookCtrl",["userService","bookService"]).controller("bookController",["$rootScope","Auth","Book","Books",function(e,o,r,t){var n=this;n.message="",n.newBook="",n.isLoading=!0,n.Books=t,o.getUser().then(function(e){n.user=e.data,r.getMyBooks(n.user.username).then(function(e){n.isLoading=!1,n.Books.myBooks=e.data})}),n.addBook=function(){n.isLoading=!0,r.addBook(n.newBook,n.user.username).success(function(e){n.isLoading=!1,n.newBook="",n.message=e.message,r.getMyBooks(n.user.username).success(function(e){n.Books.myBooks=e})})}}]).controller("allBookController",["Book","Books",function(e,o){var r=this;r.Books=o,e.getAllBooks().success(function(e){r.Books.allBooks=e})}]),angular.module("mainCtrl",[]).controller("mainController",["$rootScope","$location","Auth",function(e,o,r){var t=this;t.loggedIn=r.isLoggedIn(),e.$on("$routeChangeStart",function(){t.loggedIn=r.isLoggedIn(),r.getUser().then(function(e){t.user=e.data})}),t.doLogin=function(){t.processing=!0,r.login(t.loginData.username,t.loginData.password).success(function(e){t.processing=!1,e.success?o.path("/"):(t.error=e.message,t.loginData.password="")})},t.doLogout=function(){r.logout(),t.user={},o.path("/login")}}]),angular.module("userCtrl",["userService"]).controller("userController",["User",function(e){var o=this;o.processing=!0,e.all().success(function(e){o.processing=!1,o.users=e}),o.deleteUser=function(r){o.processing=!0,e["delete"](r).success(function(r){e.all().success(function(e){o.processing=!1,o.users=e})})}}]).controller("userCreateController",["User","$location",function(e,o){var r=this;r.type="create",r.saveUser=function(){r.processing=!0,r.message="",e.create(r.userData).success(function(e){r.processing=!1,r.userData={},r.message=e.message})}}]).controller("userEditController",["Auth","User",function(e,o){var r=this;r.type="edit",r.saveUser=function(){r.processing=!0,r.message="",e.getUser().success(function(e){r.user=e,console.log(r.user),o.update(r.user.username,r.userData).success(function(e){r.processing=!1,r.userData={},r.message=e.message})})}}]),angular.module("authService",[]).factory("Auth",["$http","$q","AuthToken","$cacheFactory",function(e,o,r,t){var n={};return n.login=function(o,t){return e.post("/api/authenticate",{username:o,password:t}).success(function(e){r.setToken(e.token)})},n.logout=function(){r.setToken();var e=t.get("$http");e.remove("/api/me")},n.isLoggedIn=function(){return r.getToken()?!0:!1},n.getUser=function(){return r.getToken()?e.get("/api/me",{cache:!0}):o.reject({message:"User has no token"})},n}]).factory("AuthToken",["$window",function(e){var o={};return o.getToken=function(){return e.localStorage.getItem("token")},o.setToken=function(o){o?e.localStorage.setItem("token",o):e.localStorage.removeItem("token")},o}]).factory("AuthInterceptor",["$q","$location","AuthToken",function(e,o,r){var t={};return t.request=function(e){var o=r.getToken();return o&&(e.headers["x-access-token"]=o),e},t.responseError=function(t){return 403==t.status&&(r.setToken(),o.path("/login")),e.reject(t)},t}]),angular.module("bookService",[]).factory("Book",["$http",function(e){var o={};return o.getMyBooks=function(o){return e.get("/api/books/"+o)},o.addBook=function(o,r){return e.post("/api/books",{newBook:o,username:r})},o.getAllBooks=function(){return e.get("/api/books")},o}]).service("Books",[function(){this.myBooks=[]}]),angular.module("userService",[]).factory("User",["$http",function(e){var o={};return o.get=function(o){return e.get("/api/users/"+o)},o.all=function(){return e.get("/api/users/")},o.create=function(o){return e.post("/api/users",o)},o.update=function(o,r){return e.put("/api/users/",{username:o,password:r.currentPassword,newPassword:r.newPassword,city:r.city,state:r.state})},o["delete"]=function(o){return e["delete"]("/api/users/"+o)},o}]);